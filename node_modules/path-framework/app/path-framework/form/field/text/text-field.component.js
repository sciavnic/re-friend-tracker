var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output } from '@angular/core';
import { ValueField } from "../value-field";
var TextFieldComponent = (function () {
    function TextFieldComponent() {
    }
    return TextFieldComponent;
}());
__decorate([
    Input('field'),
    Output('field'),
    __metadata("design:type", TextField)
], TextFieldComponent.prototype, "field", void 0);
TextFieldComponent = __decorate([
    Component({
        selector: 'path-textfield',
        templateUrl: 'text-field.component.html'
    })
], TextFieldComponent);
export { TextFieldComponent };
var TextField = (function (_super) {
    __extends(TextField, _super);
    function TextField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isPassword = false;
        _this._maxLength = 250;
        return _this;
    }
    Object.defineProperty(TextField.prototype, "isPassword", {
        get: function () {
            return this._isPassword;
        },
        set: function (value) {
            this._isPassword = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "maxLength", {
        get: function () {
            return this._maxLength;
        },
        set: function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    TextField.prototype.fromJson = function (modelFormField) {
        _super.prototype.fromJson.call(this, modelFormField);
        if (modelFormField["isPassword"] != null) {
            this.isPassword = (modelFormField["isPassword"]);
        }
        if (modelFormField["maxLength"] != null) {
            this.maxLength = (modelFormField["maxLength"]);
        }
    };
    return TextField;
}(ValueField));
export { TextField };
//# sourceMappingURL=text-field.component.js.map