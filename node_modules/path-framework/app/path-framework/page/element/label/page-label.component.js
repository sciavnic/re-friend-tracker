var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output } from "@angular/core";
import { PageElement } from "../page-element";
var PageLabelComponent = (function () {
    function PageLabelComponent() {
    }
    return PageLabelComponent;
}());
__decorate([
    Input('pageLabel'),
    Output('pageLabel'),
    __metadata("design:type", PageLabel)
], PageLabelComponent.prototype, "pageLabel", void 0);
PageLabelComponent = __decorate([
    Component({
        selector: 'path-page-label',
        templateUrl: 'page-label.component.html'
    })
], PageLabelComponent);
export { PageLabelComponent };
var PageLabel = (function (_super) {
    __extends(PageLabel, _super);
    function PageLabel(app, pathService, translationService) {
        return _super.call(this, app) || this;
    }
    Object.defineProperty(PageLabel.prototype, "value", {
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    PageLabel.prototype.onClick = function () {
        this.app.navigateBack();
    };
    PageLabel.prototype.fromJson = function (modelElement) {
        _super.prototype.fromJson.call(this, modelElement);
        this.type = "pageLabel";
        if (modelElement["value"] != null) {
            this._value = modelElement["value"];
        }
    };
    return PageLabel;
}(PageElement));
export { PageLabel };
//# sourceMappingURL=page-label.component.js.map