var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { FormField } from "./form-field";
var ValueField = (function (_super) {
    __extends(ValueField, _super);
    function ValueField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isInitialValueSet = false;
        _this._created = false;
        return _this;
    }
    Object.defineProperty(ValueField.prototype, "value", {
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    ValueField.prototype.setValue = function (value) {
        this._value = value;
    };
    Object.defineProperty(ValueField.prototype, "created", {
        get: function () {
            return this._created;
        },
        set: function (value) {
            this._created = value;
        },
        enumerable: true,
        configurable: true
    });
    ValueField.prototype.isReadonly = function () {
        return this.readonly;
    };
    Object.defineProperty(ValueField.prototype, "isInitialValueSet", {
        get: function () {
            return this._isInitialValueSet;
        },
        set: function (value) {
            this._isInitialValueSet = value;
        },
        enumerable: true,
        configurable: true
    });
    ValueField.prototype.fromJson = function (modelFormField) {
        _super.prototype.fromJson.call(this, modelFormField);
        if (modelFormField["value"] != null) {
            this.setValue(modelFormField["value"]);
        }
    };
    return ValueField;
}(FormField));
export { ValueField };
//# sourceMappingURL=value-field.js.map