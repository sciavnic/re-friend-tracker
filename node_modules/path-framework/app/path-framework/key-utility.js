var KeyUtility = (function () {
    function KeyUtility() {
    }
    KeyUtility.translateUrl = function (url, formKey, crudFormUrl, parentPageElement) {
        var translatedUrl = url;
        if (translatedUrl != null) {
            if (formKey != null && !(translatedUrl.indexOf(formKey.getName()) > 0) && crudFormUrl) {
                translatedUrl = translatedUrl + "/" + formKey.getKey();
            }
            if (formKey != null) {
                translatedUrl = translatedUrl.replace(":" + formKey.getName(), formKey.getKey());
            }
            var pageElement = parentPageElement;
            while (pageElement != null) {
                if (pageElement.getKey() != null) {
                    translatedUrl = translatedUrl.replace(":" + pageElement.getKey().getName(), pageElement.getKey().getKey());
                }
                pageElement = pageElement.getParent();
            }
        }
        return translatedUrl;
    };
    KeyUtility.replaceVariable = function (url, variable, value) {
        // replace variables at line end
        var regExp = new RegExp(":" + variable + "$", 'g');
        url = url.replace(regExp, value);
        // replace variables in middle of line
        regExp = new RegExp(":" + variable + "\/", 'g');
        url = url.replace(regExp, value + "/");
        return url;
    };
    KeyUtility.variableExists = function (url, variable) {
        var regExp = new RegExp(":" + variable + "$", 'g');
        var regExp2 = new RegExp(":" + variable + "\/", 'g');
        return url.search(regExp) != -1 || url.search(regExp2) != -1;
    };
    return KeyUtility;
}());
export { KeyUtility };
//# sourceMappingURL=key-utility.js.map