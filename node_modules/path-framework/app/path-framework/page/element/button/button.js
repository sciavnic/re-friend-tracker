var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as path from '../../../path';
export var Button = (function (_super) {
    __extends(Button, _super);
    function Button(app, pathService) {
        _super.call(this, app);
        this.pathService = pathService;
        this._details = [];
    }
    Button.prototype.onClick = function () {
        var _this = this;
        if (this._handler != null) {
            this._handler.doClick(this);
            return;
        }
        if (this._url != null) {
            this.pathService.serverGet(this.app.getBackendUrl(), this._url, function () {
                _this.app.refreshCurrentPage();
            }, null);
        }
        if (this._page != null) {
            this.app.setCurrentPage(this._page, this);
            return;
        }
        if (this._form != null) {
            this.app.setCurrentForm(this._form, this.key, this._formHandler, this);
            return;
        }
    };
    Button.prototype.setColor = function (color) {
        this.color = color;
    };
    Button.prototype.getColor = function () {
        return this.color;
    };
    Button.prototype.setIcon = function (icon) {
        this.icon = icon;
    };
    Button.prototype.setForm = function (form) {
        this.form = form;
    };
    Button.prototype.setFormHandler = function (formHandler) {
        this.formHandler = formHandler;
    };
    Button.prototype.setPage = function (page) {
        this.page = page;
    };
    Button.prototype.setKey = function (key) {
        this.key = key;
    };
    Button.prototype.getApp = function () {
        return this.app;
    };
    Button.prototype.getName = function () {
        return this.name;
    };
    Object.defineProperty(Button.prototype, "icon", {
        get: function () {
            return this._icon;
        },
        set: function (value) {
            this._icon = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "color", {
        get: function () {
            return this._color;
        },
        set: function (value) {
            this._color = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "handler", {
        get: function () {
            return this._handler;
        },
        set: function (value) {
            this._handler = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "details", {
        get: function () {
            return this._details;
        },
        set: function (value) {
            this._details = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "page", {
        get: function () {
            return this._page;
        },
        set: function (value) {
            this._page = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "form", {
        get: function () {
            return this._form;
        },
        set: function (value) {
            this._form = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "formHandler", {
        get: function () {
            return this._formHandler;
        },
        set: function (value) {
            this._formHandler = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "url", {
        get: function () {
            return this._url;
        },
        set: function (value) {
            this._url = value;
        },
        enumerable: true,
        configurable: true
    });
    return Button;
}(path.PageElement));
//# sourceMappingURL=button.js.map